#!/bin/bash
set -o errexit
set -o nounset

dir="$(dirname "$0")"
. /etc/os-release
distro=ID
release=VERSION_ID
pushd "$dir" || exit 1

# disable pager
git config --global core.pager ''

# askpass
mkdir "$HOME"/bin/
ln -sfrv "$HOME"/bin/{',',askpass}


command make -C "$dir"/src/pyenv/

if [[ ${SUDO_USER:-$'\0'} ]]; then
    # . "$dir"/bootstrap.d/${!distro}/${!release}
    if [ -s /etc/redhat-release ]
    then
        python=( python-virtualenv python-pip )
        go=( gcc-go golang-bin )
        rust=( cargo )
        devel=( readline-devel make cmake )

        command dnf install --assumeyes "${python[@]}" "${go[@]}" "${rust[@]}" "${devel[@]}"
    fi
    exit 0
else

    export SUDO_ASKPASS="$HOME"/bin/askpass
    command env sudo "$(realpath $0)"
fi

. <("$HOME"/.pyenv/bin/pyenv init -)

pyenv global 3.12.0

# exit
# yadm config --get-regex python.env
# ./helpers/parse-gitconfig

for VENV in "$HOME"/.local/share/pyvenv/default; do
    [[ -d $VENV ]] && continue
    command python -mvenv "$VENV"
    "$VENV"/bin/pip install --upgrade pip
    "$VENV"/bin/pip install -r "$dir"/requirements.txt
done

{ command -v crontab && crontab - ;} <<__CRONTAB
START_HOURS_RANGE=0-23
PATH=${PATH}
RANDOM_DELAY=2

*/10 * * * * yadm push
*/10 * * * * pass git push
__CRONTAB

exit

for pip in "${HOME:-~}"/.pyvenv/bin/pip; do
    if [[ -f $pip ]]
    then
        "$pip" install --upgrade pip
        "$pip" install -r "$dir"/requirements.txt
        break
    fi
done
trap '${TMPDIR:+rm -rf${DEBUG:+v} $TMPDIR}' EXIT
PREFIX=${HOME:-~}
TMPDIR="$(mktemp -d /run/user/$(id -u)/XXXXX.tmp)"
mkdir --parents ${PREFIX:-/tmp}/.config/waybar/
pushd $TMPDIR  || exit 1
git clone --depth 1 https://github.com/catppuccin/waybar
pushd waybar
cp --recursive themes/ assets/ ${PREFIX:-/tmp}/.config/waybar/
ls "$TMPDIR"

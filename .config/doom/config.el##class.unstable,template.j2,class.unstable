{#-*- mode: jinja2 -*-#}
;;; $DOOMDIR/config.el -*- mode: emacs-lisp; lexical-binding: t; -*-
;; UN-STABLE
{#  TODO sway-mode -#}
{#- TODO magit + yadm: list todos, but limit to files git -#}
{#- TODO change alpha when loosing frame focus () #}


;; start: .config/doom/conf.d/_functions.el
{%- include '.config/doom/conf.d/_functions.el' -%}
;; end: .config/doom/conf.d/_functions.el

;; start: .config/doom/conf.d/_macros.el
{%- include '.config/doom/conf.d/_macros.el' -%}
;; end: .config/doom/conf.d/_macros.el

;; start: .config/doom/conf.d/_bindings.el
{%- include '.config/doom/conf.d/_bindings.el' -%}
;; end: .config/doom/conf.d/_bindings.el

(map! "M-RET"   'M-RET!
      "H-SPC c" 'doom/goto-private-config-file
)

(defun yadm ()
  (interactive)
  (magit-status "/yadm::"))

(map! "H-SPC y" 'yadm)

(after! tramp
  (add-to-list (quote tramp-methods)
               (quote ("yadm"
                       (tramp-login-program "yadm")
                       (tramp-login-args (("enter")))
                       (tramp-login-env (("SHELL") ("/bin/sh")))
                       (tramp-remote-shell "/bin/sh")
                       (tramp-remote-shell-args ("-c"))))))

(add-load-path! (expand-file-name "load.d" doom-private-dir))

(set (quote bookmark-default-file)
     (expand-file-name "_bookmarks.el" doom-user-dir))


(use-package! modus-themes
  :ensure t
  :load-path "~/src/modus-themes"
  :config
  (modus-themes-select 'modus-vivendi-tinted)
  :custom
  (modus-operandi-palette-overrides (quote
                                     ((fg-main "#333333")
                                      (comment red-faint)
                                      (keyword cyan-cooler))))
  (modus-themes-headings (quote
                          ((1 . (variable-pitch 1.5))
                           (2 . (1.3))
                           (agenda-date . (1.3))
                           (agenda-structure . (variable-pitch light 1.8))
                           (t . (1.1)))))
  (modus-themes-variable-pitch-ui t)
  (modus-themes-to-toggle (quote (modus-operandi-tinted modus-vivendi-tinted))))

(plist-put! +ligatures-extra-symbols
            ;; org
            :name          "¬ª"
            :src_block     "¬ª"
            :src_block_end "¬´"
            :quote         "‚Äú"
            :quote_end     "‚Äù"

            ;; ;; Functional
            ;; :lambda        "Œª"
            ;; :def           "∆í"
            ;; :composition   "‚àò"
            ;; :map           "‚Ü¶"
            ;; ;; Types
            ;; :null          "‚àÖ"
            ;; :true          "ùïã"
            ;; :false         "ùîΩ"
            ;; :int           "‚Ñ§"
            ;; :float         "‚Ñù"
            ;; :str           "ùïä"
            ;; :bool          "ùîπ"
            ;; :list          "ùïÉ"
            ;; ;; Flow
            ;; :not           "Ôø¢"
            ;; :in            "‚àà"
            ;; :not-in        "‚àâ"
            ;; :and           "‚àß"
            ;; :or            "‚à®"
            ;; :for           "‚àÄ"
            ;; :some          "‚àÉ"
            ;; :return        "‚üº"
            ;; :yield         "‚üª"
            ;; ;; Other
            ;; :union         "‚ãÉ"
            ;; :intersect     "‚à©"
            ;; :diff          "‚àñ"
            ;; :tuple         "‚®Ç"
            ;; :pipe          "ÓÑµ" ;; FIXME: find a non-private char
            ;; :dot           "‚Ä¢"
            )

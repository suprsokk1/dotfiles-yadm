;;; $DOOMDIR/config.el -*- mode: emacs-lisp; lexical-binding: t; -*-

;; TODO focus-{in,out}-hook is depricated, find replacement
;; TODO sway-mode
;; TODO magit + yadm: list todos, but limit to files git
;; TODO change alpha when loosing frame focus ()


(setq-default
 custom-file                     (expand-file-name "custom.el" "~/.local/emacs")

 frame-title-format              "%b %f"

 ;; header-line-format              "%b %V" ;(quote ("%e" (:eval)))
 header-line-format              nil ;(quote ("%e" (:eval)))

 shift-select-mode               nil

 comint-move-point-for-output    t

 +snippets-dir                   (or (expand-file-name "snippets" (file-truename doom-user-dir))
                                     (expand-file-name "snippets" (expand-file-name doom-user-dir)))

 async-bytecomp-package-mode      t

 initial-buffer-choice            (or initial-buffer-choice
                                      (expand-file-name "dashboard.org" doom-user-dir))

 doom-scratch-initial-major-mode (quote fundamental-mode)

 doom-projectile-cache-blacklist (quote "/tmp")

 bookmark-default-file           (expand-file-name
                                  "_bookmarks.el" doom-user-dir)

 doom-modeline-major-mode-icon   t

 treemacs-load-theme            "Default"

 compile-command                "~/bin/,"

 org-log-state-notes-into-drawer t

 vterm-shell                     "/bin/zsh"

 company-minimum-prefix-length   4      ;performance
 )

;; https://github.com/hlissner/.doom.d/blob/6af0a541e0b6b6ec9aee4cb9f05e5cbec0800d91/config.el
(add-to-list
 'default-frame-alist '(inhibit-double-buffering . t))

(global-set-key (kbd "M-RET")      #'M-RET!)

(global-set-key (kbd "H-g")      #'magit-status)
(global-set-key (kbd "s-g")      #'magit-status)

(global-set-key (kbd "M-<return>") #'M-RET!)

(let ((ELC (file-expand-wildcards (concat (expand-file-name "conf.d" (dir!)) "/*.elc"))))
    (mapc #'load-file ELC))

(defun M-RET! (&rest BODY)
  "Default `M-RET' action"
  (interactive)
  (message "M-RET!:START")
  (save-window-excursion
    (async-shell-command (expand-file-name "~/.local/bin/_meta_return"))))

(defun -byte-compile-conf.d ()
  (interactive)
  (let ((EL (file-expand-wildcards (concat (expand-file-name "conf.d" (dir!)) "/*.el"))))
    (mapc #'byte-compile-file EL)))

(defun -cron-hourly (&rest rest)
  (org-agenda nil "t")                  ;
  )

(setq-hook! '(org-mode) display-line-numbers-type nil)

(global-hide-mode-line-mode 1)
(beacon-mode -1)
(global-hl-line-mode -1)
(blink-cursor-mode 1)

(map! :map org-agenda-mode-map "RET" #'org-agenda-goto) ;original: org-agenda-switch-to

(setq-hook! (quote (comint-mode-hook))
  comint-buffer-maximum-size 20000 ; Increase comint buffer size.
  comint-prompt-read-only t        ; Make the prompt read only.
  )

(add-hook! (quote (python-mode-hook)) (quote rainbow-delimiters-mode))

(custom-set-faces
 '(rainbow-delimiters-depth-1-face ((t (:foreground "gray")))))

(after! rainbow-delimiters
  (add-hook! (quote (python-mode-hook))
    (quote rainbow-delimiters-mode))
  (custom-set-faces
   '(rainbow-delimiters-depth-1-face ((t (:foreground "gray"))))))

(after! tramp
  (add-to-list (quote tramp-methods)
               (quote ("yadm"
                       (tramp-login-program "yadm")
                       (tramp-login-args (("enter")))
                       (tramp-login-env (("SHELL") ("/bin/sh")))
                       (tramp-remote-shell "/bin/sh")
                       (tramp-remote-shell-args ("-c"))))))

(after! ob-async
  (setq ob-async-no-async-languages-alist '("ipython" "python")))

(quote (setq-hook! (quote (fundamental-mode))
        header-line-format (quote ("%e" (:eval)))))

(mkdir "~/.local/emacs" t)

;; (with-eval-after-load 'doom-themes
;;   (doom-themes-treemacs-config))

(defun yadm ()
  (interactive)
  (magit-status "/yadm::"))

;; (ignore-errors
;;   (load-file (format "~/.%s.el" (getenv "HOSTNAME"))))

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

ZSH_THEME="random"
export ZSH="${ZSH-$HOME/.oh-my-zsh}"

# Path to your oh-my-zsh installation.

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# if test -f $(mktemp)
# then rm -v $_
# fi

if ! test -d ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
then git clone https://github.com/zsh-users/zsh-autosuggestions $_
     plugins+=(zsh-autosuggestions)
fi
# ZSH_THEME="pmcgee"
ZSH_THEME="af-magic"

# activate oh-my-zsh
. $ZSH/oh-my-zsh.sh

TRAPERR() {
    case $# in
        0) exit 1;; # !?
        *)
            case $@ in
                *)
                ;;
                *)
            esac
    esac
}

# FZF_DEFAULT_OPTS="--reverse --lines 10"
FZF_DEFAULT_OPTS="--reverse"
FZF_DEFAULT_OPTIONS="$FZF_DEFAULT_OPTS"

# hash jq=~/bin/jq

setterm --linewrap off

# zstyle
# syntax:
# $ zstyle :completion:<function>:<completer>:<command>:<argument>:<tag>

# zstyle :completion:<function>:<completer>:<command>:<argument>:<tag>

# unalias jq

zstyle ':completion:*' use-cache on
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/.zcompcache"

zstyle ':completion:*:*:foo:*' file-sort size

zstyle ':completion:*:*:fzf:*' file-sort size

__tmux_menu() {
    PS1=
    PS2=
    PS3=
    PS4=
    PS5=
    TRAPEXIT() { tmux set synchronize-panes 0; }
    TRAPINT() { exit; }
    0() { tput cup 0 0; }
    clr() {
        chars=()
    }
    chars=()
    cmd=()
    hist=()
    setopt pipefail
    tmux set synchronize-panes 1

    __get_logopt__tmux
    sleep 1

    # disable cursor
    tput civis

    while read -sk x
    do
        # terminate
        case $x in
            $'\025') ;;
            $'\ 025') ;;
            :) clear ;;
            .) cmd=() ;;
            *) chars+=("$x") ;;
        esac

        case $chars in
            :*) cmd+=("$x") ;;
            *)  chars+=("$x");;
        esac

        tput cup 0 0
        CLEAR_LINE='\033[1K'
        clr=clear_line

        case ${#cmd} in
            0)

            ;;
            *)
                printf '%s' "$cmd[@]"
        esac

        echo
        chars+=("$x")

    done

    tput cnorm

    exit
}

linkParent() {
    set - ${1:-$$}

    ppid=$(getPpid)
    mkdir -p ~/.local/proc/$1
    ln -svf /proc/$1 $_/pid
    ln -svf /proc/$ppid $_/pid
    sleep 1
    linkParent $ppid
}


exe() {
    command stdbuf -oL fd -tf -tx -g $1 ~ -H -X env -C ~/bin ln -sfrv |
        head -1
}

source ~/.aliases
source ~/.functions

# bindkey

alias -s git='command git -C ~/src clone --depth 1'

if [[ $(readlink /proc/$PPID/exe) =~ tmux$ ]] && ! [[ $TMUX_PANE ]]; then
    tmux source-file ~/.config/tmux/tmux.conf
    __tmux_menu
fi


# Bind \eg to `git status`
function _git-status {
    zle kill-whole-line
    zle -U "git status"
    zle accept-line
}
zle -N _git-status


function _tmux_prev-window {
    zle -U "tmux prev-window\n"
}

zle -N _tmux_prev-window
bindkey '\eg' _tmux_prev-window

function _piactl {
    zle -U "tmux prev-window"
}

zle -N _piactl

--refresh

alias -- git='git ${GIT_WORK_TREE:+--work-tree=$GIT_WORK_TREE} ${GIT_DIR:+--git-dir=${GIT_DIR}}'

# mkdir -p ~/.local/zsh/$$/
# mkfifo ~/.local/zsh/$$/fifo
# exec 3<> $_
# GIT_DIR=$HOME/.local/git
# GIT_WORK_TREE=$HOME
FZF_DEFAULT_COMMAND=$HOME/bin/,
# GIT_DISCOVERY_ACROSS_FILESYSTEM=1
